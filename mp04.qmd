---
title: "Op-Ed: The Trump Realignment — 2024 Wasn’t Just a Win, It Was a Revolution"

format:
  html:
    code-fold: true
    toc: true
    toc-location: right
    toc-depth: 5
    css: styles.css
---

## Introduction
Let’s dispense with the euphemisms: 2024 was not just an election. It was a reckoning. Donald J. Trump’s resounding victory wasn’t a fluke, a quirk of turnout, or the result of some gaffe-prone Democratic campaign. It was the culmination of a political realignment that has been building for nearly a decade — and it has now arrived in full.

The era of technocratic centrism is over. The populist majority is here.

## Task 1: US County Shapefiles
To explore recent US political shifts, we need to collect election result data. We begin by downloading a shapefile containing US county (and equivalent) boundaries from the US Census Bureau.
```{r, warning=FALSE, message=FALSE}
# Set directory and file paths
dir_path <- "data/mp04"
zip_url <- "https://www2.census.gov/geo/tiger/GENZ2023/shp/cb_2023_us_county_500k.zip"
zip_file <- file.path(dir_path, "cb_2023_us_county_500k.zip")

# Create directory if it doesn't exist
if (!dir.exists(dir_path)) {
  dir.create(dir_path, recursive = TRUE)
}

# Download the zip file if it doesn't already exist
if (!file.exists(zip_file)) {
  message("Downloading shapefile...")
  download.file(zip_url, destfile = zip_file, mode = "wb")
} else {
  message("Shapefile zip already exists. Skipping download.")
}

# Unzip the file if shapefile components are not yet extracted
shapefile_base <- file.path(dir_path, "cb_2023_us_county_500k")
if (!file.exists(paste0(shapefile_base, ".shp"))) {
  message("Extracting shapefile...")
  unzip(zip_file, exdir = dir_path)
} else {
  message("Shapefile already extracted. Skipping unzip.")
}
```

For years, pundits have dismissed Trump’s coalition as a “base” — rural, uneducated, angry. In 2016, they called it a protest vote. In 2020, they called it a fluke saved by the pandemic. Now, in 2024, after flipping back Rust Belt counties, surging Latino support in South Texas and Nevada, and making inroads with Black working-class voters in urban cores, Trump’s movement can no longer be ignored. This wasn’t a rerun — it was an expansion.

## Task 2: Acquire 2024 US Presidential Election Results
We will next obtain county-level election results for each of the 50 US states from Wikipedia. 
```{r, warning=FALSE, message=FALSE}
library(httr2)
library(rvest)
library(dplyr)
library(stringr)
library(readr)
library(purrr)
library(fs)

get_2024_election_results <- function(state) {
  # Create safe directory
  dir_create("data/elections_2024")
  
  # Format Wikipedia URL part
  state_url <- str_replace_all(state, " ", "_")
  url_path <- paste0("wiki/2024_United_States_presidential_election_in_", state_url)
  full_url <- paste0("https://en.wikipedia.org/wiki/", url_path)
  
  # Cached file path
  local_file <- file.path("data/elections_2024", paste0(state, ".html"))
  
  # Download and cache page
  if (!file_exists(local_file)) {
    message("Downloading page for ", state)
    resp <- request("https://en.wikipedia.org/") |>
      req_url_path(url_path) |>
      req_perform()
    writeBin(resp_body_raw(resp), local_file)
  } else {
    message("Using cached page for ", state)
  }
  
  # Parse HTML
  page <- read_html(local_file)
  tables <- html_elements(page, "table")
  df_list <- lapply(tables, html_table, fill = TRUE)
  
  # Define possible headers that indicate a county-level results table
  county_keywords <- c("county", "parish", "borough", "municipality")
  
  # Find correct table
  selected_table <- NULL
  for (df in df_list) {
    headers <- tolower(names(df))
    if (any(str_detect(headers, str_c(county_keywords, collapse = "|")))) {
      selected_table <- df
      break
    }
  }
  
  if (is.null(selected_table)) {
    warning("No county-level table found for: ", state)
    return(NULL)
  }
  
  # Clean up the selected table
  names(selected_table) <- names(selected_table) |>
    str_replace_all("\\[.*?\\]", "") |>
    make.unique()
  cleaned <- selected_table |>
    mutate(state = state)
  
  
  return(cleaned)
}

states <- state.name
results_list_2024 <- map(states, safely(get_2024_election_results))

```

Across the Midwest, counties that voted for Obama twice and then Trump twice have now gone even redder. In Pennsylvania and Michigan, union households voted Republican by margins not seen since the Reagan era. In Arizona, Hispanic precincts once assumed to be safe blue turned a defiant shade of red. Even New York and California saw double-digit swings in working-class boroughs and districts. This isn’t just cultural grievance — it’s economic rebellion.

## Task 3: Acquire 2020 US Presidential Election Results
Next, we simply modify our code from Task 2 to acquire 2020 US Presidential Election Results.
```{r, warning=FALSE, message=FALSE}
get_2020_election_results <- function(state) {
  # Create safe directory
  dir_create("data/elections_2020")
  
  # Format Wikipedia URL part
  state_url <- str_replace_all(state, " ", "_")
  url_path <- paste0("wiki/2020_United_States_presidential_election_in_", state_url)
  full_url <- paste0("https://en.wikipedia.org/", url_path)
  
  # Cached file path
  local_file <- file.path("data/elections_2020", paste0(state, ".html"))
  
  # Download and cache page
  if (!file_exists(local_file)) {
    message("Downloading page for ", state)
    resp <- request("https://en.wikipedia.org/") |>
      req_url_path(url_path) |>
      req_perform()
    writeBin(resp_body_raw(resp), local_file)
  } else {
    message("Using cached page for ", state)
  }
  
  # Parse HTML
  page <- read_html(local_file)
  tables <- html_elements(page, "table")
  df_list <- lapply(tables, html_table, fill = TRUE)
  
  # Define possible headers that indicate a county-level results table
  county_keywords <- c("county", "parish", "borough", "municipality")
  
  # Find correct table
  selected_table <- NULL
  for (df in df_list) {
    headers <- tolower(names(df))
    if (any(str_detect(headers, str_c(county_keywords, collapse = "|")))) {
      selected_table <- df
      break
    }
  }
  
  if (is.null(selected_table)) {
    warning("No county-level table found for: ", state)
    return(NULL)
  }
  
  # Clean up the selected table
  names(selected_table) <- names(selected_table) |>
    str_replace_all("\\[.*?\\]", "") |>
    make.unique()
  cleaned <- selected_table |>
    mutate(state = state)
  
  return(cleaned)
}

# Example usage
states <- state.name
results_list_2020 <- map(states, safely(get_2020_election_results))

```

Democrats spent the last four years talking down to the very Americans they used to represent. They mocked parents concerned about schools, they ignored inflation until it was too late, and they alienated the working poor with climate mandates and identity politics. Trump did something radical: he listened. He talked about the price of gas, the border crisis, and the dignity of American work. And America responded.

## Task 4: Initial Analysis Questions
At this point, we have all of the data needed and we will combine the three data files (county shapes, 2020 results, 2024 results) and use them to answer the following questions.

### 1. Which county or counties cast the most votes for Trump (in absolute terms) in 2024?
```{r, warning=FALSE, message=FALSE, include=FALSE}
library(sf)

# Read the shapefile
county_shapes <- st_read(paste0(shapefile_base, ".shp"))
```
```{r, warning=FALSE, message=FALSE}
# Keep only relevant columns for joining
county_shapes <- county_shapes |>
  select(GEOID, NAME, STATEFP, geometry)

# Extract and bind 2020 results
valid_2020 <- results_list_2020 |> keep(~ !is.null(.x$result)) |> map("result")
election_2020_df <- bind_rows(valid_2020)

# Extract and bind 2024 results
valid_2024 <- results_list_2024 |> keep(~ !is.null(.x$result)) |> map("result")
election_2024_df <- bind_rows(valid_2024)

# Helper function to clean names
clean_name <- function(x) {
  x |> tolower() |> str_replace_all("[^a-z]", "")
}

# Prepare election data with cleaned keys
county_col_2020 <- names(election_2020_df)[1]

election_2020_df <- election_2020_df |>
  mutate(county_clean = clean_name(.data[[county_col_2020]]),
         state_clean = clean_name(state))

county_col_2024 <- names(election_2024_df)[1]

election_2024_df <- election_2024_df |>
  mutate(county_clean = clean_name(.data[[county_col_2024]]),
         state_clean = clean_name(state))

# Prepare shapefile data with cleaned keys
county_shapes <- county_shapes |>
  mutate(county_clean = clean_name(NAME),
         state_clean = clean_name(state.name[as.integer(STATEFP)]))  # converts STATEFP to full name

# Join with 2020
joined_2020 <- left_join(county_shapes, election_2020_df,
                         by = c("county_clean", "state_clean"))

# Join with 2024
joined_all <- left_join(joined_2020, election_2024_df,
                        by = c("county_clean", "state_clean"),
                        suffix = c("_2020", "_2024"))

# 1.Which county or counties cast the most votes for Trump (in absolute terms) in 2024?
#names(joined_all)
joined_all <- joined_all |>
  mutate(trump_votes_2024 = parse_number(`Donald TrumpRepublican_2024`))
top_trump_county <- joined_all |>
  slice_max(trump_votes_2024) |>
  select(NAME, state_clean, trump_votes_2024)
library(knitr)
kable(top_trump_county,cap="County with the most votes for Trump in 2024")
```
In 2024, Jefferson County, Kentucky cast the most votes for Donald Trump of any county in the nation, delivering 144,553 votes for the former president.

In a year defined by surprising shifts and reawakened coalitions, it was this unlikely southern urban stronghold — more commonly known for bourbon than for MAGA hats — that handed Trump his single largest county-level haul. The message? Even in places where Democrats once held sway, the red tide surged.

### 2. Which county or counties cast the most votes for Biden (as a fraction of total votes cast) in 2020?
```{r, warning=FALSE, message=FALSE}
# 2.Which county or counties cast the most votes for Biden (as a fraction of total votes cast) in 2020?
joined_all <- joined_all |>
  mutate(
    biden_votes_2020 = parse_number(`Joe BidenDemocratic.1`)
    )
top_biden_county <- joined_all |>
  slice_max(biden_votes_2020) |>
  select(NAME, state_clean, biden_votes_2020)
kable(top_biden_county, cap="County with the most votes for Biden in 2020")
```
In the 2020 election, Macon County, Alabama gave Joe Biden his strongest showing in the country by vote share, with 81.49% of all ballots cast going to the Democratic nominee. This deep-blue pocket in the Deep South stood out as one of Biden’s most loyal counties, delivering a resounding show of support.

### 3. Which county or counties had the largest shift towards Trump (in absolute terms) in 2024?
```{r, warning=FALSE, message=FALSE}
# 3.Which county or counties had the largest shift towards Trump (in absolute terms) in 2024?
joined_all <- joined_all |>
  mutate(
    trump_votes_2020 = parse_number(`Donald TrumpRepublican_2020`)
  )
# the change in vote count for Trump from 2020 to 2024 in each county
joined_all <- joined_all |>
  mutate(
    trump_vote_shift = trump_votes_2024 - trump_votes_2020
  )
# Identify the County with the Largest Increase
largest_shift_county <- joined_all |>
  slice_max(trump_vote_shift) |>
  select(NAME, state_clean, trump_votes_2020, trump_votes_2024, trump_vote_shift)
kable(largest_shift_county, cap="County with the largest shift towards Trump in 2024")
```
In the 2024 election, Baldwin County, Alabama recorded the largest shift toward Donald Trump in absolute terms, delivering 12,254 more votes for him than it did in 2020. The coastal county emerged as a stronghold of growing Republican enthusiasm, reflecting a deepening red trend in the South.

### 4. Which state had the smallest shift towards Trump in 2024? 
```{r, warning=FALSE, message=FALSE}
# 4. Which state had the smallest shift towards Trump in 2024?
# Group by the cleaned state name and sum Trump votes for both years:
state_shifts <- joined_all |>
  group_by(state_clean) |>
  summarise(
    trump_2020 = sum(trump_votes_2020, na.rm = TRUE),
    trump_2024 = sum(trump_votes_2024, na.rm = TRUE),
    shift = trump_2024 - trump_2020
  )
#finding the smallest (most negative or least positive) value of shift:
smallest_shift_state <- state_shifts |>
  slice_min(shift)
kable(smallest_shift_state, cap="State with the smallest shift towards Trump in 2024")
```
In 2024, Oregon stood out as the state least moved by the red wave, registering the smallest shift toward Donald Trump—in fact, a shift in the opposite direction. Trump received 9,744 fewer votes there than in 2020, making Oregon a rare outlier in an election that otherwise saw Republican gains across much of the country.

### 5. What is the largest county, by area, in this data set?
```{r, warning=FALSE, message=FALSE}
# 5. What is the largest county, by area, in this data set?
# To accurately calculate area, reproject to an equal-area CRS like EPSG: 5070 (USA Contiguous Albers Equal Area):
joined_proj <- st_transform(joined_all, crs = 5070)

# Find the maximum area and Get the largest county
joined_proj <- joined_proj |>
  mutate(area_km2 = as.numeric(st_area(geometry)) / 1e6)

largest_county <- joined_proj |>
  slice_max(area_km2) |>
  select(NAME, state_clean, area_km2)
kable(largest_county, cap="The Largest County by area in this data set")
```
The largest county by area in the dataset is Yukon-Koyukuk, Alaska, spanning a vast 382,994 square kilometers. Remote, rugged, and largely untouched, this enormous stretch of Alaskan wilderness dwarfs entire states and stands as a stark reminder of the sheer scale of America's frontier.

### 6. Which county has the highest voter density (voters per unit of area) in 2020?
```{r, warning=FALSE, message=FALSE}
# 6.Which county has the highest voter density (voters per unit of area) in 2020?
# Total votes cast in 2020 per county
joined_all <- joined_all |>
  mutate(
    biden_2020 = parse_number(`Joe BidenDemocratic`),
    total_votes_2020 = biden_2020 + trump_votes_2020
  )
#Use an equal-area CRS EPSG: 5070 for accurate measurement:
library(sf)

joined_proj <- st_transform(joined_all, crs = 5070)

joined_proj <- joined_proj |>
  mutate(
    area_km2 = as.numeric(st_area(geometry)) / 1e6  # convert from m² to km²
  )
# Calculate Voter Density
joined_proj <- joined_proj |>
  mutate(
    voter_density_2020 = total_votes_2020 / area_km2
  )
#Find County with Highest Voter Density
highest_density_county <- joined_proj |>
  slice_max(voter_density_2020) |>
  select(NAME, state_clean, total_votes_2020, area_km2, voter_density_2020)
kable(highest_density_county, cap="County with the highest voter density in 2020")
```
In the 2020 election, Washington County, Oregon topped the nation in voter density, packing 318 voters per square kilometer into its modest footprint. Nestled in the Portland metro area, this suburban hub proved that civic engagement can thrive where communities are closely knit and densely settled.

### 7. Which county had the largest increase in voter turnout in 2024?
```{r, warning=FALSE, message=FALSE}
# 7.Which county had the largest increase in voter turnout in 2024?
# calculate total votes for 2020 and 2024 per county:
library(dplyr)
library(readr)

joined_all <- joined_all |>
  mutate(
    kamala_2024 = parse_number(`Kamala HarrisDemocratic`),
    total_votes_2024 = kamala_2024 + trump_votes_2024
  )
#Compute the Turnout Change
joined_all <- joined_all |>
  mutate(
    turnout_increase = total_votes_2024 - total_votes_2020
  )
#Identify the County with the Largest Increase
largest_turnout_county <- joined_all |>
  slice_max(turnout_increase) |>
  select(NAME, state_clean, total_votes_2020, total_votes_2024, turnout_increase)
kable(largest_turnout_county, cap="County with the largest increase in voter turnout in 2024")
```
Baldwin County, Alabama saw the largest surge in voter turnout in the 2024 election, with 12,610 more ballots cast than in 2020. This coastal county not only deepened its support for Donald Trump but also drew more voters to the polls than any other, signaling a sharp rise in political engagement.

## Task 5: Reproduce NYT Figure
Having confirmed our data is mainly reliable, we are now ready to reproduce the NYT Figure.
```{r, warning=FALSE, message=FALSE}
# Compute the shift (as a percentage of votes cast) rightwards for each county.
#Compute the percentage of votes Trump received in both elections:
library(dplyr)

joined_all <- joined_all |>
  mutate(
    trump_pct_2020 = trump_votes_2020 / total_votes_2020,
    trump_pct_2024 = trump_votes_2024 / total_votes_2024
  )
#Calculate the change in Trump's vote percentage from 2020 to 2024:
joined_all <- joined_all |>
  mutate(
    rightward_shift = trump_pct_2024 - trump_pct_2020
  )

# 
library(sf)
library(ggplot2)
library(dplyr)

# Use Albers Equal Area projection (like NYT)
proj_crs <- 2163
joined_all <- st_transform(joined_all, proj_crs)

# Compute centroids
joined_all <- joined_all |>
  mutate(centroid = st_centroid(geometry)) |>
  mutate(
    x = st_coordinates(centroid)[, 1],
    y = st_coordinates(centroid)[, 2]
  )

# Set arrow scale — adjust to taste
arrow_scale <- 10000000  # shorter arrows

# Direction + scaled endpoints
joined_all <- joined_all |>
  mutate(
    shift_direction = ifelse(rightward_shift > 0, "Right", "Left"),
    shift_length = abs(rightward_shift) * arrow_scale,
    xend = x + ifelse(rightward_shift > 0, shift_length, -shift_length),
    yend = y
  )

states <- joined_all |>
  group_by(STATEFP, state_clean) |>
  summarize(geometry = st_union(geometry), .groups = "drop")

# Reposition Alaska and Hawaii
scale_and_shift <- function(sf_obj, scale = 1, shift = c(0, 0)) {
  geom <- st_geometry(sf_obj)
  center <- st_centroid(st_union(geom))
  new_geom <- (geom - center) * scale + center + shift
  st_geometry(sf_obj) <- st_sfc(new_geom, crs = st_crs(sf_obj))
  sf_obj
}

alaska <- states |> filter(STATEFP == "02") |>
  scale_and_shift(scale = 0.35, shift = c(1300000, -5000000))
hawaii <- states |> filter(STATEFP == "15") |>
  scale_and_shift(scale = 1, shift = c(5200000, -1400000))
mainland <- states |> filter(!STATEFP %in% c("02", "15"))

states_transformed <- bind_rows(mainland, alaska, hawaii)
```

```{r, warning=FALSE, message=FALSE, include=FALSE}
ggplot() +
  # Background state outlines
  geom_sf(data = states_transformed, fill = "gray98", color = "gray80", size = 0.2) +
  
  # Arrows for vote shifts
  geom_segment(
    data = joined_all,
    aes(x = x, y = y, xend = xend, yend = yend, color = shift_direction),
    arrow = arrow(type = "closed", length = unit(0.06, "inches")),
    linewidth = 0.25,
    alpha = 0.9
  ) +
  
  # NYT-style red/blue
  scale_color_manual(values = c("Right" = "#c40000", "Left" = "#0050d0")) +
  
  # Clean theme
  theme_void() +
  theme(
    legend.position = "none",
    plot.background = element_rect(fill = "white", color = NA)
  ) +
  
  # 🔍 Zoom in on the US region (EPSG:2163)
  coord_sf(
    xlim = c(-2000000, 3500000),
    ylim = c(-2700000, 1000000),
    expand = FALSE,
    datum = NA
  )
```

```{r, warning=FALSE, message=FALSE}
ggplot() +
  # State backgrounds
  geom_sf(data = states_transformed, fill = "gray98", color = "gray80", size = 0.2) +
  
  # Arrows showing county-level vote shifts
  geom_segment(
    data = joined_all,
    aes(x = x, y = y, xend = xend, yend = yend, color = shift_direction),
    arrow = arrow(type = "closed", length = unit(0.06, "inches")),
    linewidth = 0.25,
    alpha = 0.9
  ) +

  # Manual color scale: red for rightward, blue for leftward
  scale_color_manual(
    values = c("Right" = "#c40000", "Left" = "#0050d0"),
    guide = "none"
  ) +

  # Title, subtitle, and caption
  labs(
    title = "Where the 2024 Election Shifted",
    subtitle = "Each arrow shows the direction and magnitude of vote shift by county\nRed = Shift toward Trump, Blue = Shift toward Democrats",
    caption = "Source: County-level election data, 2020–2024"
  ) +

  # Minimalist theme with emphasis on data
  theme_void(base_family = "Helvetica") +
  theme(
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
    plot.subtitle = element_text(size = 13, hjust = 0.5, margin = margin(b = 10)),
    plot.caption = element_text(size = 9, hjust = 0.5, margin = margin(t = 10)),
    plot.background = element_rect(fill = "white", color = NA)
  ) +

  # Focused zoom on continental US (in projected coordinates)
  coord_sf(
    xlim = c(-2500000, 2500000),
    ylim = c(-2700000, 1100000),
    expand = FALSE,
    datum = NA
  )

```

## Conclusion

What we’re witnessing is a tectonic shift — a movement of working-class voters across race, region, and religion toward a party they now see as fighting for them. The GOP is no longer the party of Paul Ryan; it’s the party of working families, small towns, and forgotten cities. Trump didn’t just win an election — he reshaped the map.

Of course, the legacy press will resist this. They’ll cry foul, blame misinformation, or moan about democracy. But it’s the people who choose — and in 2024, the people made it clear: the Trump coalition is not a glitch in the system. It is the system now.

If Democrats want to cling to coastal technocracy, let them. The heartland has chosen its champion.

History will mark 2024 as the year the political pendulum didn’t just swing — it broke loose.

## Task 6: Additional Analysis and Figure Creation

**Theme: 2024 Was a National Rightward Shift, Not a Fluke**

### ✅ Talking Point 1: The Median County Shifted Right by More Than 5 Percentage Points

> “This wasn’t a marginal drift — it was a median-level red surge. Over half the counties in America shifted more than 5 percentage points toward Trump.”

**Statistical Test**:
Using the infer package, we test:

> Null hypothesis: Median county shift is less than or equal to 5%. Alternative hypothesis: Median shift > 5%.

```{r, warning=FALSE, message=FALSE, include=FALSE}
library(infer)
library(tibble)

as_tibble(st_drop_geometry(joined_all))
```

```{r, warning=FALSE, message=FALSE}
joined_all %>%
  specify(response = rightward_shift) %>%
  hypothesize(null = "point", mu = 5) %>%
  generate(reps = 1000, type = "bootstrap") %>%
  calculate(stat = "mean") %>%
  get_p_value(obs_stat = median(joined_all$rightward_shift, na.rm = TRUE),
              direction = "right")

```
If p < 0.05, we reject the null and conclude a significant rightward shift.

**🎯 Plot: Histogram of county-level shift**

```{r, warning=FALSE, message=FALSE}
joined_all %>%
  ggplot(aes(x = rightward_shift)) +
  geom_histogram(binwidth = 1, fill = "pink", color = "white", alpha = 0.8) +
  geom_vline(aes(xintercept = median(rightward_shift, na.rm = TRUE)), color = "black", linetype = "dashed") +
  labs(
    title = "Rightward Shift in 2024",
    subtitle = "Distribution of county-level partisan shifts",
    x = "Trump % (2024) − Trump % (2020)",
    y = "Number of Counties"
  ) +
  theme_minimal()
```
### ✅ Talking Point 2: Turnout Rose Dramatically in Red Counties, Not Blue Ones

> “Trump didn’t just win more votes — he brought more voters. The biggest turnout surges were in deep red counties.”

**Computation**:
Group counties by 2020 Trump share (e.g., above/below 50%), and compare turnout_increase.
```{r, warning=FALSE, message=FALSE, include=FALSE}
joined_all <- joined_all %>%
  mutate(red_2020 = trump_pct_2020 > 0.5)

library(dplyr)
joined_all %>%
  group_by(red_2020) %>%
  summarize(median_turnout_increase = median(turnout_increase, na.rm = TRUE))
```
**Statistical Test**:
Two-sample test to compare turnout_increase between red and blue counties.
```{r, warning=FALSE, message=FALSE}
joined_all_clean <- joined_all %>%
  filter(!is.na(red_2020)) %>%
  mutate(red_2020 = as.logical(red_2020))  # ensure it's logical

library(infer)

joined_all_clean %>%
  specify(turnout_increase ~ red_2020) %>%
  hypothesize(null = "independence") %>%
  generate(reps = 1000, type = "permute") %>%
  calculate(stat = "diff in means", order = c(TRUE, FALSE)) %>%
  get_p_value(
    obs_stat = with(joined_all_clean,
                    mean(turnout_increase[red_2020], na.rm = TRUE) -
                      mean(turnout_increase[!red_2020], na.rm = TRUE)),
    direction = "right"
  )

```
**🎯 Plot: Boxplot of turnout change by 2020 partisan alignment**

```{r, warning=FALSE, message=FALSE}
joined_all %>%
  filter(!is.na(red_2020)) %>%
  ggplot(aes(x = as.factor(red_2020), y = turnout_increase, fill = red_2020)) +
  geom_boxplot(outlier.shape = NA, alpha = 0.7) +
  scale_fill_manual(values = c("blue", "red"), labels = c("Biden 2020", "Trump 2020")) +
  labs(
    title = "Turnout Change from 2020 to 2024",
    subtitle = "Trump counties retained more of their voters",
    x = "2020 Winner",
    y = "Turnout Increase (2024 vs 2020)"
  ) +
  theme_minimal()

```
### ✅ Talking Point 3: Democratic Strongholds Lost Ground Even Where Biden Previously Dominated

> “Even counties that went 80% for Biden in 2020 saw a drop in support. The erosion is real, even in the bluest ZIP codes.”

**Computation**:
Filter counties with Biden vote share > 70% in 2020 and look at Trump shift.
```{r, warning=FALSE, message=FALSE}
blue_strongholds <- joined_all %>% filter(biden_2020 > 70)
summary(blue_strongholds$rightward_shift)
```
**Statistical Test**:
Is the average shift in those counties still rightward (i.e., Trump gained even in blue bastions)?
```{r, warning=FALSE, message=FALSE}
library(infer)
blue_strongholds %>%
  specify(response = rightward_shift) %>%
  hypothesize(null = "point", mu = 0) %>%
  generate(reps = 1000, type = "bootstrap") %>%
  calculate(stat = "mean") %>%
  get_p_value(obs_stat = mean(blue_strongholds$rightward_shift, na.rm = TRUE),
              direction = "right")
```

**🎯 Plot: Bar plot of top counties by vote gain**
```{r, warning=FALSE, message=FALSE}
joined_all %>%
  mutate(winner_2020 = ifelse(trump_pct_2020 > 0.5, "Trump", "Biden")) %>%
  group_by(NAME, state_clean, winner_2020) %>%
  mutate(vote_gain = total_votes_2024 - total_votes_2020) %>%
  ungroup() %>%
  filter(!is.na(vote_gain)) %>%
  slice_max(order_by = vote_gain, n = 10) %>%
  ggplot(aes(x = reorder(NAME, vote_gain), y = vote_gain, fill = winner_2020)) +
  geom_col() +
  coord_flip() +
  scale_fill_manual(values = c("Biden" = "blue", "Trump" = "red")) +
  labs(
    title = "Top 10 Counties by Raw Vote Increase",
    subtitle = "Most top-gainers were Trump-aligned in 2020",
    x = "County",
    y = "Net Vote Gain (2024 vs 2020)"
  ) +
  theme_minimal()
```