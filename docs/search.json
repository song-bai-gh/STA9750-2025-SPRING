[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to my website!",
    "section": "",
    "text": "Last Updated: Saturday 03 01, 2025 at 17:28PM"
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "",
    "text": "1 Summary\nThe New York City’s new Commission to Analyze Taxpayer Spending (CATS) intended to understand the city’s expenses and wondered if there were any opportunities to spend taxpayers’ money more efficiently. As a senior technical analyst, I will help analyze the city payroll and identify the instances where senior agency officials make significantly more than rank-and-file city employees. I will use City payroll data from NYC Open Data and highlight possible savings to be submitted to the commission.\n\n\n2 Quick Facts\nHere are some quick facts about city payroll data.\n\nMember of civilian complaint review board has the highest base rate of pay.\nGregory Russ had the highest payroll of 414707 in 2020, 2021, and 2022.\nJames Internicola worked the most overtime hours of 3693.\nOffice of Racial Equity has the highest average total annual payroll.\nDepartment of Ed Pedagogical has the most employees in every year.\nBoard of Election has the highest overtime usage.\nThe average salary of employees working outside the New York City is 55503.\nThe city’s payroll has grown 13384.23 dollars and 32.29% over the past 10 years.\n\nI started by downloading the city payroll data with the following code (Click “Show the code” to see). This code also created a data file in the directory.\n\n\nShow the code\nif(!file.exists(\"data/mp01/nyc_payroll_export.csv\")){\n  dir.create(\"data/mp01\", showWarnings=FALSE, recursive=TRUE)\n  \n  ENDPOINT &lt;- \"https://data.cityofnewyork.us/resource/k397-673e.json\"\n  \n  if(!require(\"httr2\")) install.packages(\"httr2\")\n  library(httr2)\n  \n  if(!require(\"jsonlite\")) install.packages(\"jsonlite\")\n  library(jsonlite)\n  \n  if(!require(\"dplyr\")) install.packages(\"dplyr\")\n  library(dplyr)\n  \n  if(!require(\"readr\")) install.packages(\"readr\")\n  library(readr)\n  \n  BATCH_SIZE &lt;- 50000\n  OFFSET     &lt;- 0\n  END_OF_EXPORT &lt;- FALSE\n  ALL_DATA &lt;- list()\n  \n  while(!END_OF_EXPORT){\n    cat(\"Requesting items\", OFFSET, \"to\", BATCH_SIZE + OFFSET, \"\\n\")\n    \n    req &lt;- request(ENDPOINT) |&gt;\n      req_url_query(`$limit`  = BATCH_SIZE, \n                    `$offset` = OFFSET)\n    \n    resp &lt;- req_perform(req)\n    \n    batch_data &lt;- fromJSON(resp_body_string(resp))\n    \n    ALL_DATA &lt;- c(ALL_DATA, list(batch_data))\n    \n    if(NROW(batch_data) != BATCH_SIZE){\n      END_OF_EXPORT &lt;- TRUE\n      \n      cat(\"End of Data Export Reached\\n\")\n    } else {\n      OFFSET &lt;- OFFSET + BATCH_SIZE\n    }\n  }\n  \n  ALL_DATA &lt;- bind_rows(ALL_DATA)\n  \n  cat(\"Data export complete:\", NROW(ALL_DATA), \"rows and\", NCOL(ALL_DATA), \"columns.\")\n  \n  write_csv(ALL_DATA, \"data/mp01/nyc_payroll_export.csv\")\n}\n\n\nAfter I acquired the latest NYC Payroll Data, I used read_csv function from the readr package to read my data file into R. I made a few changes before my analysis like changing some of the string columns to more conventional punctuation. Specifically, I used a mutate command and the str_to_title from stringr package to convert the following columns’ formatting.\n\n\nShow the code\nlibrary(readr)\nnyc_payroll &lt;- read_csv(\"data/mp01/nyc_payroll_export.csv\")\n\nlibrary(dplyr)\nlibrary(stringr)\n\nnyc_payroll &lt;- nyc_payroll %&gt;%\n  mutate(\n    agency_name = str_to_title(agency_name),\n    last_name = str_to_title(last_name),\n    first_name = str_to_title(first_name),\n    work_location_borough = str_to_title(work_location_borough),\n    title_description = str_to_title(title_description),\n    leave_status_as_of_june_30 = str_to_title(leave_status_as_of_june_30)\n  )\n\n\nLet’s check our data with glimpse function to make sure it is properly formatting.\n\n\nShow the code\nglimpse(nyc_payroll)\n\n\nRows: 6,225,611\nColumns: 17\n$ fiscal_year                &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2…\n$ payroll_number             &lt;dbl&gt; 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67,…\n$ agency_name                &lt;chr&gt; \"Admin For Children's Svcs\", \"Admin For Chi…\n$ last_name                  &lt;chr&gt; \"Faye Fall\", \"Kilgore\", \"Wisdom\", \"Miller\",…\n$ first_name                 &lt;chr&gt; \"Sokhna\", \"Orlantha\", \"Cherise\", \"Moya-Gaye…\n$ mid_init                   &lt;chr&gt; \"M\", \"B\", \"M\", \"S\", \"M\", \"L\", \"O\", NA, \"N\",…\n$ agency_start_date          &lt;dttm&gt; 2023-11-20, 2023-08-28, 2022-10-24, 2023-0…\n$ work_location_borough      &lt;chr&gt; \"Bronx\", \"Brooklyn\", \"Manhattan\", \"Manhatta…\n$ title_description          &lt;chr&gt; \"Child Protective Specialist\", \"Child Prote…\n$ leave_status_as_of_june_30 &lt;chr&gt; \"Active\", \"Active\", \"On Leave\", \"On Leave\",…\n$ base_salary                &lt;dbl&gt; 62043, 62043, 43144, 62043, 60236, 62043, 6…\n$ pay_basis                  &lt;chr&gt; \"per Annum\", \"per Annum\", \"per Annum\", \"per…\n$ regular_hours              &lt;dbl&gt; 1050.00, 1470.00, 1251.50, 1400.75, 700.00,…\n$ regular_gross_paid         &lt;dbl&gt; 31267.96, 44660.96, 28649.20, 44515.43, 221…\n$ ot_hours                   &lt;dbl&gt; 12.00, 99.75, 30.00, 44.75, 53.00, 146.00, …\n$ total_ot_paid              &lt;dbl&gt; 425.00, 3859.84, 802.42, 1476.98, 1933.33, …\n$ total_other_pay            &lt;dbl&gt; 78.04, 78.14, 78.26, 78.37, 78.47, 78.86, 7…\n\n\nWe can see now the formatting of the six columns’ values are well converted. We could also understand what the relevant columns are of the data set by looking at the above output. Next, let’s take a look at the career of the current mayor Eric L. Adams by using the following code to create a table.\n\n\nShow the code\ncarrer_adams &lt;- nyc_payroll |&gt; \n  filter(last_name == \"Adams\" & first_name == \"Eric\" & mid_init == \"L\") |&gt;\n  arrange(fiscal_year) |&gt;\n  summarize(fiscal_year,title_description,agency_name,base_salary)\n\ncarrer_adams &lt;- carrer_adams |&gt;\n  mutate(base_salary = ifelse(fiscal_year == \"2022\"&title_description==\"Borough President\", \n                              179200/2, base_salary)) |&gt;\n  mutate(base_salary = ifelse(fiscal_year == \"2022\"&title_description==\"Mayor\", \n                              258750/2, base_salary))\n\ncarrer_adams &lt;- carrer_adams |&gt;\n  rename(\n    'Fiscal Year' = fiscal_year,\n    Position = title_description,\n    Agency = agency_name,\n    'Total Salary' = base_salary\n  )\n\n\n\n\nShow the code\nlibrary(DT)\nlibrary(scales)\n\ncarrer_adams |&gt; \n  mutate(`Total Salary` = dollar(`Total Salary`)) |&gt;\n  datatable(options=list(searching=FALSE, \n                         paging=FALSE,\n                         info=FALSE))\n\n\n\n\n\n\nBecause the Mayoral term does not line up with the fiscal year, we can see from the table that in 2022, Mr. Adams held two jobs as Borough President and Mayor. I calculated his total salary in that year as the average of total salaries for Borough President and Mayor. I used the DT package to create a better visualization of the employee salary table for Mr. Adams.\nAfter that, I wanted to compute actual total compensation for each employee in our data set. I took a look at the different pay structures by using the following code.\n\n\nShow the code\nunique(nyc_payroll$pay_basis)\n\n\n[1] \"per Annum\"       \"per Hour\"        \"per Day\"         \"Prorated Annual\"\n\n\nWe can see employees are paid hourly, daily, annually or other way. Thus, I used a case_when function inside a mutate command to handle this.\n\n\nShow the code\ntotal_compensation &lt;- nyc_payroll |&gt;\n  mutate(\n    total_compensation = case_when(\n      pay_basis == \"per Annum\" ~ base_salary, \n      pay_basis == \"per Hour\" ~ base_salary * (regular_hours+1.5* ot_hours),\n      pay_basis == \"per Day\" ~ base_salary * (regular_hours+ot_hours)/7.5,\n      TRUE ~ NA_real_  \n    )\n  )\n\n\nNow that we have computed total compensation for each city employee, we can go forward to analyze the city payroll. Let’s begin by answering some general questions about the data set.\n\nWhich job title has the highest base rate of pay? (If needed, assume a standard 2000 hour work year and no overtime.)\n\n\n\nShow the code\ntotal_compensation |&gt; mutate(\n  base_rate = case_when(\n    pay_basis == \"per Annum\" ~ base_salary, \n    pay_basis == \"per Hour\" ~ base_salary * 2000,\n    pay_basis == \"per Day\" ~ base_salary * 2000/7.5,\n    TRUE ~ NA_real_  \n  )\n) |&gt; group_by(title_description) |&gt; summarize(mean_rate=mean(base_rate)) |&gt;\n  arrange(desc(mean_rate))\n\n\n# A tibble: 1,977 × 2\n   title_description                                 mean_rate\n   &lt;chr&gt;                                                 &lt;dbl&gt;\n 1 Custodian Engineer                               120870091.\n 2 Member, Civilian Complaint Review Board             639785.\n 3 Medical Investigator                                623926.\n 4 Chairman                                            379618.\n 5 Member Of The Environmental Control Board - Oath    350188.\n 6 Chief Actuary                                       296470.\n 7 Pension Investment Advisor                          295814.\n 8 Chancellor                                          287066.\n 9 Captain - Chief Of Staff                            276588 \n10 First Deputy Mayor                                  274919.\n# ℹ 1,967 more rows\n\n\nWe can see the list of job titles with the highest base rate of pay. But the first title seems an outlier, I would say the member of civilian complaint review board has the highest base rate of pay.\n\nWhich individual & in what year had the single highest city total payroll (regular and overtime combined)?\n\n\n\nShow the code\ntotal_compensation |&gt; \n  summarize(fiscal_year,first_name,last_name,total_compensation) |&gt;\n  arrange(desc(total_compensation))\n\n\n# A tibble: 6,225,611 × 4\n   fiscal_year first_name last_name   total_compensation\n         &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;                    &lt;dbl&gt;\n 1        2022 Gregory    Russ                    414707\n 2        2021 Gregory    Russ                    414707\n 3        2020 Gregory    Russ                    414707\n 4        2024 Lisa       Bova-Hiatt              393532\n 5        2024 Steven     Meier                   373320\n 6        2023 David      Banks                   363346\n 7        2023 David      Banks                   363346\n 8        2022 David      Banks                   363346\n 9        2022 Meisha     Ross Porter             363346\n10        2021 Meisha     Ross Porter             363346\n# ℹ 6,225,601 more rows\n\n\nWe can see Gregory Russ had the highest payroll of 414707 in 2020, 2021, and 2022.\n\nWhich individual worked the most overtime hours in this data set?\n\n\n\nShow the code\ntotal_compensation |&gt; summarize(fiscal_year,first_name,last_name,ot_hours) |&gt;\n  arrange(desc(ot_hours))\n\n\n# A tibble: 6,225,611 × 4\n   fiscal_year first_name last_name   ot_hours\n         &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt;\n 1        2022 James      Internicola    3693.\n 2        2022 Michael    Thompson       3618.\n 3        2022 Timothy    Sands          3556.\n 4        2014 John       Murphy         3348.\n 5        2022 Seeta      Deochan        3341.\n 6        2022 Dion       Middleton      3328.\n 7        2024 Kashwayne  Burnett        3303.\n 8        2022 Anthony    Messam         3271 \n 9        2022 Davey      Payne          3241 \n10        2022 Andre      Boucaud        3214 \n# ℹ 6,225,601 more rows\n\n\nJames Internicola worked the most overtime hours of 3693.\n\nWhich agency has the highest average total annual payroll (base and overtime pay per employee)?\n\n\n\nShow the code\ntotal_compensation |&gt; group_by(agency_name) |&gt;\n  summarize(avg_tot_pay=mean(total_compensation)) |&gt;\n  arrange(desc(avg_tot_pay))\n\n\n# A tibble: 169 × 2\n   agency_name                    avg_tot_pay\n   &lt;chr&gt;                                &lt;dbl&gt;\n 1 Office Of Racial Equity            151093.\n 2 Commission On Racial Equity        136191 \n 3 Districting Commission             120641.\n 4 Office Of Criminal Justice         117280.\n 5 Office Of Collective Bargainin     114884.\n 6 Financial Info Svcs Agency         111230.\n 7 Office Of The Actuary              106924.\n 8 Bronx Community Board #3           105814.\n 9 Public Administrator-Richmond      105752.\n10 Municipal Water Fin Authority      101300.\n# ℹ 159 more rows\n\n\nOffice of Racial Equity has the highest average total annual payroll.\n\nWhich agency has the most employees on payroll in each year?\n\n\n\nShow the code\ntotal_compensation |&gt;\n  group_by(fiscal_year, agency_name) |&gt;\n  summarize(num_empl=n(),.groups=\"drop\") |&gt;\n  group_by(fiscal_year) |&gt;\n  slice_max(num_empl,n=1)\n\n\n# A tibble: 11 × 3\n# Groups:   fiscal_year [11]\n   fiscal_year agency_name            num_empl\n         &lt;dbl&gt; &lt;chr&gt;                     &lt;int&gt;\n 1        2014 Dept Of Ed Pedagogical   100589\n 2        2015 Dept Of Ed Pedagogical   111857\n 3        2016 Dept Of Ed Pedagogical   106263\n 4        2017 Dept Of Ed Pedagogical   104629\n 5        2018 Dept Of Ed Pedagogical   107956\n 6        2019 Dept Of Ed Pedagogical   112067\n 7        2020 Dept Of Ed Pedagogical   114999\n 8        2021 Dept Of Ed Pedagogical   113523\n 9        2022 Dept Of Ed Pedagogical   120453\n10        2023 Dept Of Ed Pedagogical   106882\n11        2024 Dept Of Ed Pedagogical   108209\n\n\nDepartment of Ed Pedagogical has the most employees in every year.\n\nWhich agency has the highest overtime usage (compared to regular hours)?\n\n\n\nShow the code\ntotal_compensation |&gt;\n  group_by(agency_name) |&gt;\n  summarize(ot_usage=mean(ot_hours)/mean(regular_hours)) |&gt;\n  arrange(desc(ot_usage))\n\n\n# A tibble: 169 × 2\n   agency_name                  ot_usage\n   &lt;chr&gt;                           &lt;dbl&gt;\n 1 Board Of Election              0.200 \n 2 Fire Department                0.190 \n 3 Department Of Correction       0.185 \n 4 Department Of Sanitation       0.138 \n 5 Police Department              0.125 \n 6 Dept Of Citywide Admin Svcs    0.120 \n 7 Department Of Transportation   0.115 \n 8 Dept. Of Homeless Services     0.109 \n 9 Nyc Housing Authority          0.106 \n10 Admin For Children's Svcs      0.0812\n# ℹ 159 more rows\n\n\nBoard of Election has the highest overtime usage.\n\nWhat is the average salary of employees who work outside the five boroughs? (That is, whose work_location_borough is not one of the five counties.)\n\n\n\nShow the code\ntotal_compensation |&gt;\n  filter(!work_location_borough %in% c(\"Manhattan\", \"Brooklyn\", \"Queens\", \n                                     \"Bronx\", \"Richmond\")) |&gt;\n  summarize(avg_salary=mean(total_compensation,na.rm=TRUE))\n\n\n# A tibble: 1 × 1\n  avg_salary\n       &lt;dbl&gt;\n1     55503.\n\n\nThe average salary of employees working outside the New York City is 55503.\n\nHow much has the city’s aggregate payroll grown over the past 10 years?\n\n\n\nShow the code\ngrowth &lt;- total_compensation |&gt;\n  group_by(fiscal_year) |&gt;\n  summarize(agg_pay=mean(total_compensation,na.rm=TRUE))\n\nagg_pay_2024 &lt;- growth |&gt; filter(fiscal_year==\"2024\") |&gt;\n  pull(agg_pay)\n\nagg_pay_2014 &lt;- growth |&gt; filter(fiscal_year==\"2014\") |&gt;\n  pull(agg_pay)\n\ngrowth_amount &lt;- agg_pay_2024 - agg_pay_2014\ngrowth_percentage &lt;- growth_amount/agg_pay_2014*100\ngrowth_amount\n\n\n[1] 13384.23\n\n\nShow the code\ngrowth_percentage\n\n\n[1] 32.2868\n\n\nThe city’s payroll has grown 13384.23 dollars and 32.29% over the past 10 years.\nNow, I will analyze three possible policy changes to see their impact on overall spending. I have two policies suggested and will come up with my own policy proposal for analysis. For each policy, I will i) compute its impact on city payroll, ii) determine any other staffing adjustments required, and iii) make a recommendation to the CATS.\nPolicy I: Capping Salaries at Mayoral Level\nWe are interested in finding out employees making more than the mayor in each fiscal year. I first computed the total mayor pay for each fiscal year, and then identify employees who made more than this amount in the same fiscal year.\n\n\nShow the code\nmayor_pay_per_year &lt;- total_compensation |&gt;\n  filter(title_description == \"Mayor\") |&gt;\n  group_by(fiscal_year) |&gt;\n  summarize(mayor_pay = mean(total_compensation))\n\nemployees_above_mayor &lt;- total_compensation |&gt;\n  left_join(mayor_pay_per_year, by = \"fiscal_year\") |&gt;\n  filter(total_compensation &gt; mayor_pay)\n\nmayor_pay_per_year\n\n\n# A tibble: 11 × 2\n   fiscal_year mayor_pay\n         &lt;dbl&gt;     &lt;dbl&gt;\n 1        2014   112500.\n 2        2015   225000 \n 3        2016   225000 \n 4        2017   225000 \n 5        2018   258750 \n 6        2019   258750 \n 7        2020   258750 \n 8        2021   258750 \n 9        2022   258750 \n10        2023   258750 \n11        2024   258750 \n\n\nShow the code\nemployees_above_mayor\n\n\n# A tibble: 14,076 × 19\n   fiscal_year payroll_number agency_name          last_name first_name mid_init\n         &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;                &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;   \n 1        2024             67 Admin For Children'… Cleary    Joan       M       \n 2        2024             67 Admin For Children'… Pletniko… Margaret   &lt;NA&gt;    \n 3        2024             67 Admin For Children'… Hines-Jo… Lisa       C       \n 4        2024             67 Admin For Children'… Gendell   Stephanie  J       \n 5        2024             67 Admin For Children'… White     Andrew     K       \n 6        2024             67 Admin For Children'… Mendoza   Angel      V       \n 7        2024             67 Admin For Children'… Dannhaus… Jess       B       \n 8        2024             67 Admin For Children'… Wolkomir  Elizabeth  D       \n 9        2024             67 Admin For Children'… Sputz     Alan       W       \n10        2024             67 Admin For Children'… Saunders  Winette    &lt;NA&gt;    \n# ℹ 14,066 more rows\n# ℹ 13 more variables: agency_start_date &lt;dttm&gt;, work_location_borough &lt;chr&gt;,\n#   title_description &lt;chr&gt;, leave_status_as_of_june_30 &lt;chr&gt;,\n#   base_salary &lt;dbl&gt;, pay_basis &lt;chr&gt;, regular_hours &lt;dbl&gt;,\n#   regular_gross_paid &lt;dbl&gt;, ot_hours &lt;dbl&gt;, total_ot_paid &lt;dbl&gt;,\n#   total_other_pay &lt;dbl&gt;, total_compensation &lt;dbl&gt;, mayor_pay &lt;dbl&gt;\n\n\nNext, we want to know how much would be saved if these employees’ salary were capped at the mayor’s level.\n\n\nShow the code\nemployees_above_mayor &lt;- employees_above_mayor |&gt;\n  mutate(savings = total_compensation - mayor_pay)\ntotal_savings &lt;- sum(employees_above_mayor$savings)\ntotal_savings\n\n\n[1] 272525990\n\n\nIt looks like a large amount of money. We would also want to know if this policy was adopted, which agencies and job titles would bear the most. We do this by calculating the average savings in each combination of agencies and job titles and sorting them to see the top ones.\n\n\nShow the code\nsavings_by_agency_and_title &lt;- employees_above_mayor |&gt;\n  filter(fiscal_year&gt;\"2014\") |&gt;\n  group_by(agency_name,title_description ) |&gt;\n  summarize(avg_savings = mean(savings)) |&gt;\n  arrange(desc(avg_savings))\nsavings_by_agency_and_title\n\n\n# A tibble: 208 × 3\n# Groups:   agency_name [67]\n   agency_name                   title_description            avg_savings\n   &lt;chr&gt;                         &lt;chr&gt;                              &lt;dbl&gt;\n 1 Nyc Housing Authority         Chair                            118639.\n 2 Dept Of Ed Pedagogical        Assistant Superintendent         104596 \n 3 Office Of The Comptroller     Pension Investment Advisor        91686 \n 4 Dept Of Ed Pedagogical        Chancellor                        79505.\n 5 Nyc Housing Authority         Executive Agency Counsel          67985.\n 6 Office Of The Actuary         Chief Actuary                     53196.\n 7 Office Of The Actuary         Administrative Actuary            53135 \n 8 Office Of The Comptroller     Administrative Staff Analyst      41667.\n 9 Community College (Bronx)     President                         36136 \n10 Dept Of Health/Mental Hygiene City Medical Specialist           35156.\n# ℹ 198 more rows\n\n\nThe Chair of NYC Housing Authority would bear the brunt of this policy with an average savings of 118639. If this policy was adopted, around 273 million would be saved each year. We would not need to hire more employees to implement that policy. It is almost the easiest way to save the money and would not bring too much negative impact to the city. I would recommend to the CATS that this policy should be adopted to generate more than 200 millions of dollars every year which can be used to bring more benifits to the city.\nPolicy II: Increasing Staffing to Reduce Overtime Expenses\nThere are some potential upsides of increasing employment to reduce overtime cost. Let’s first find out how many overtime hours worked for each combination of agency and job title. Then we estimate the number of new full-time employees needed to replace that much overtime. I did the job using the following code.\n\n\nShow the code\novertime_by_agency_and_title &lt;- total_compensation |&gt;\n  group_by(agency_name , title_description) |&gt;\n  summarize(total_overtime_hours = sum(ot_hours)) |&gt;\n  arrange(desc(total_overtime_hours))\n\novertime_with_ft_equivalents &lt;- overtime_by_agency_and_title |&gt;\n  mutate(full_time_equivalents = total_overtime_hours / 2000)\n\novertime_by_agency_and_title\n\n\n# A tibble: 8,351 × 3\n# Groups:   agency_name [169]\n   agency_name              title_description         total_overtime_hours\n   &lt;chr&gt;                    &lt;chr&gt;                                    &lt;dbl&gt;\n 1 Police Department        Police Officer                       58898639.\n 2 Fire Department          Firefighter                          43536213.\n 3 Department Of Correction Correction Officer                   34092745.\n 4 Department Of Sanitation Sanitation Worker                    23098266.\n 5 Police Department        P.o. Da Det Gr3                      15314153.\n 6 Police Department        School Safety Agent                  14967018.\n 7 Nyc Housing Authority    Caretaker                             9439229.\n 8 Police Department        Sergeant-                             8424793.\n 9 Fire Department          Lieutenant                            7607797.\n10 Police Department        Traffic Enforcement Agent             7003213.\n# ℹ 8,341 more rows\n\n\nShow the code\novertime_with_ft_equivalents\n\n\n# A tibble: 8,351 × 4\n# Groups:   agency_name [169]\n   agency_name      title_description total_overtime_hours full_time_equivalents\n   &lt;chr&gt;            &lt;chr&gt;                            &lt;dbl&gt;                 &lt;dbl&gt;\n 1 Police Departme… Police Officer               58898639.                29449.\n 2 Fire Department  Firefighter                  43536213.                21768.\n 3 Department Of C… Correction Offic…            34092745.                17046.\n 4 Department Of S… Sanitation Worker            23098266.                11549.\n 5 Police Departme… P.o. Da Det Gr3              15314153.                 7657.\n 6 Police Departme… School Safety Ag…            14967018.                 7484.\n 7 Nyc Housing Aut… Caretaker                     9439229.                 4720.\n 8 Police Departme… Sergeant-                     8424793.                 4212.\n 9 Fire Department  Lieutenant                    7607797.                 3804.\n10 Police Departme… Traffic Enforcem…             7003213.                 3502.\n# ℹ 8,341 more rows\n\n\nThen, we will see how much money could be saved if we replaced the overtime working with regular time working from new employees.\n\n\nShow the code\nbase_rate &lt;- total_compensation |&gt; mutate(\n  base_rate = case_when(\n    pay_basis == \"per Annum\" ~ base_salary, \n    pay_basis == \"per Hour\" ~ base_salary * 2000,\n    pay_basis == \"per Day\" ~ base_salary * 2000/7.5,\n    TRUE ~ NA_real_  \n  )\n)\n\novertime_by_agency_and_title &lt;- base_rate |&gt;\n  group_by(agency_name, title_description) |&gt;\n  summarize(total_overtime_hours = sum(ot_hours), \n            avg_regular_salary = mean(base_rate)) |&gt;\n  arrange(desc(total_overtime_hours)) \n\novertime_by_agency_and_title &lt;- overtime_by_agency_and_title |&gt;\n  mutate(overtime_cost = total_overtime_hours * 1.5 * avg_regular_salary / 2000)\n  \nsavings_by_agency_and_title &lt;- overtime_by_agency_and_title |&gt;\n  mutate(savings = overtime_cost - (total_overtime_hours * avg_regular_salary / 2000)) \nsavings_by_agency_and_title |&gt;\n  summarize(agency_name,title_description,savings) |&gt;\n  arrange(desc(savings))\n\n\n# A tibble: 8,351 × 3\n# Groups:   agency_name [169]\n   agency_name              title_description                       savings\n   &lt;chr&gt;                    &lt;chr&gt;                                     &lt;dbl&gt;\n 1 Police Department        Police Officer                      1040781034.\n 2 Fire Department          Firefighter                          836859022.\n 3 Department Of Correction Correction Officer                   613245406.\n 4 Department Of Sanitation Sanitation Worker                    402214527.\n 5 Police Department        P.o. Da Det Gr3                      372704345.\n 6 Police Department        Sergeant-                            225040284.\n 7 Fire Department          Lieutenant                           198745275.\n 8 Police Department        School Safety Agent                  157464286.\n 9 Police Department        Lieutenant                           146861382.\n10 Police Department        Police Officer D/A Detective 2nd Gr  123805712.\n# ℹ 8,341 more rows\n\n\nNext, let’s determine the aggregate savings possible by agency using the following code.\n\n\nShow the code\naggregate_savings_by_agency &lt;- savings_by_agency_and_title |&gt;\n  group_by(agency_name) |&gt;\n  summarize(total_savings = sum(savings)) |&gt;\n  arrange(desc(total_savings))\naggregate_savings_by_agency\n\n\n# A tibble: 169 × 2\n   agency_name                    total_savings\n   &lt;chr&gt;                                  &lt;dbl&gt;\n 1 Department Of Correction          824929213.\n 2 Admin For Children's Svcs         157231704.\n 3 Board Of Election                  37477300.\n 4 Department Of Buildings            29617709.\n 5 Dept. Of Design & Construction      9009313.\n 6 District Attorney-Manhattan         8708231.\n 7 Community College (Manhattan)       7470882.\n 8 Nyc Employees Retirement Sys        6808228.\n 9 Law Department                      6267436.\n10 Community College (Queensboro)      4879669.\n# ℹ 159 more rows\n\n\nThe total potencial savings for this policy for each combination of agency and job title is shown above. Around 1 billion dollars could be saved for Police officers in Police Dapartment.The total number of new employees needed would be 29449 for the same job. The police officers in police departments would be affected the most with this new policy. On agency level, Department of Correction would face the largest impact.\nI would recommend this policy to the CATS, especially to hire more new full time employees as police officers in Police Department because this would help save more than 1 billion dollars every year and also reduce the police officers’ pressure. On agency level, department of correction should absolutely adopt this policy because they could save far more than any other agencies in the city.\nPolicy III: Remote Working as a Citywide Policy\nI want to introduce a citywide remote working policy for all eligible employees in the city. This could help reduce costs like spending for office space and equipment. Let’s consider if half of the total employees in our data set could work remotely and 1% of their total compensation could be saved due to this policy. How much money could be saved annually.\n\n\nShow the code\ntotal_compensation |&gt;\n  summarize(remote_savings=sum(total_compensation,na.rm=TRUE)*0.5*0.01)\n\n\n# A tibble: 1 × 1\n  remote_savings\n           &lt;dbl&gt;\n1    1483791723.\n\n\nNearly 1.5 billion dollars could be saved for the city. If this policy was adopted, the time employees spend on commute would also be saved. We assume half an hour of the saved time could convert same amount of time from overtime to regular time per day. I want to know how much money could be saved.\n\n\nShow the code\nbase_rate |&gt; \n  summarize(ot_to_regular_savings=\n              sum(base_rate/2000*0.5*0.5,na.rm=TRUE)\n  )\n\n\n# A tibble: 1 × 1\n  ot_to_regular_savings\n                  &lt;dbl&gt;\n1            250690543.\n\n\nThe third policy would have reduced the total payroll expenses by 1.5 billion directly and 250 million with overtime hours converted to regular hours. To implement this policy, no more hiring are required. I recommended this policy to the CATS since it would not only reduce the payroll expenses but also provide more time to employees, which could help improve the productivity.\nHowever, I made some assumptions for the this policy like half of all employees could be working remotely and 1% of their total compensation would be saved following this policy. These might introduce error into my projections because I have not done enough research about how many employees could be remote workers or the proportion of their total salary that could be saved when this policy adopted.\nThe above three policies could all work to help the Commission of Analyze Taxpayer Spending change how they spend taxpayers’ money and make the process more efficient. The amount of money saved by adopting different policies ranges from hundreds of millions to billions per year. Each of them has different concertations like the combinations of agency and job title. The CATS could combine the three policies or adopt one policy in specific areas."
  }
]