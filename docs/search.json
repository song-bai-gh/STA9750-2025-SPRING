[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to my website!",
    "section": "",
    "text": "Last Updated: Saturday 03 01, 2025 at 17:28PM"
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "",
    "text": "The New York City’s new Commission to Analyze Taxpayer Spending (CATS) intended to understand the city’s expenses and wondered if there were any opportunities to spend taxpayers’ money more efficiently. As a senior technical analyst, I will help analyze the city payroll and identify the instances where senior agency officials make significantly more than rank-and-file city employees. I will use City payroll data from NYC Open Data and highlight possible savings to be submitted to the commission."
  },
  {
    "objectID": "mp01.html#which-job-title-has-the-highest-base-rate-of-pay-if-needed-assume-a-standard-2000-hour-work-year-and-no-overtime.",
    "href": "mp01.html#which-job-title-has-the-highest-base-rate-of-pay-if-needed-assume-a-standard-2000-hour-work-year-and-no-overtime.",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "3.1 Which job title has the highest base rate of pay? (If needed, assume a standard 2000 hour work year and no overtime.)",
    "text": "3.1 Which job title has the highest base rate of pay? (If needed, assume a standard 2000 hour work year and no overtime.)\n\n\nShow the code\ntotal_compensation |&gt; mutate(\n  base_rate = case_when(\n    pay_basis == \"per Annum\" ~ base_salary, \n    pay_basis == \"per Hour\" ~ base_salary * 2000,\n    pay_basis == \"per Day\" ~ base_salary * 2000/7.5,\n    TRUE ~ NA_real_  \n  )\n) |&gt; group_by(title_description) |&gt; summarize(mean_rate=mean(base_rate)) |&gt;\n  arrange(desc(mean_rate))\n\n\n# A tibble: 1,977 × 2\n   title_description                                 mean_rate\n   &lt;chr&gt;                                                 &lt;dbl&gt;\n 1 Custodian Engineer                               120870091.\n 2 Member, Civilian Complaint Review Board             639785.\n 3 Medical Investigator                                623926.\n 4 Chairman                                            379618.\n 5 Member Of The Environmental Control Board - Oath    350188.\n 6 Chief Actuary                                       296470.\n 7 Pension Investment Advisor                          295814.\n 8 Chancellor                                          287066.\n 9 Captain - Chief Of Staff                            276588 \n10 First Deputy Mayor                                  274919.\n# ℹ 1,967 more rows\n\n\nWe can see the list of job titles with the highest base rate of pay. But the first title seems an outlier, I would say the member of civilian complaint review board has the highest base rate of pay."
  },
  {
    "objectID": "mp01.html#which-individual-in-what-year-had-the-single-highest-city-total-payroll-regular-and-overtime-combined",
    "href": "mp01.html#which-individual-in-what-year-had-the-single-highest-city-total-payroll-regular-and-overtime-combined",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "3.2 Which individual & in what year had the single highest city total payroll (regular and overtime combined)?",
    "text": "3.2 Which individual & in what year had the single highest city total payroll (regular and overtime combined)?\n\n\nShow the code\ntotal_compensation |&gt; \n  summarize(fiscal_year,first_name,last_name,total_compensation) |&gt;\n  arrange(desc(total_compensation))\n\n\n# A tibble: 6,225,611 × 4\n   fiscal_year first_name last_name   total_compensation\n         &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;                    &lt;dbl&gt;\n 1        2022 Gregory    Russ                    414707\n 2        2021 Gregory    Russ                    414707\n 3        2020 Gregory    Russ                    414707\n 4        2024 Lisa       Bova-Hiatt              393532\n 5        2024 Steven     Meier                   373320\n 6        2023 David      Banks                   363346\n 7        2023 David      Banks                   363346\n 8        2022 David      Banks                   363346\n 9        2022 Meisha     Ross Porter             363346\n10        2021 Meisha     Ross Porter             363346\n# ℹ 6,225,601 more rows\n\n\nWe can see Gregory Russ had the highest payroll of 414707 in 2020, 2021, and 2022."
  },
  {
    "objectID": "mp01.html#which-individual-worked-the-most-overtime-hours-in-this-data-set",
    "href": "mp01.html#which-individual-worked-the-most-overtime-hours-in-this-data-set",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "3.3 Which individual worked the most overtime hours in this data set?",
    "text": "3.3 Which individual worked the most overtime hours in this data set?\n\n\nShow the code\ntotal_compensation |&gt; summarize(fiscal_year,first_name,last_name,ot_hours) |&gt;\n  arrange(desc(ot_hours))\n\n\n# A tibble: 6,225,611 × 4\n   fiscal_year first_name last_name   ot_hours\n         &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;          &lt;dbl&gt;\n 1        2022 James      Internicola    3693.\n 2        2022 Michael    Thompson       3618.\n 3        2022 Timothy    Sands          3556.\n 4        2014 John       Murphy         3348.\n 5        2022 Seeta      Deochan        3341.\n 6        2022 Dion       Middleton      3328.\n 7        2024 Kashwayne  Burnett        3303.\n 8        2022 Anthony    Messam         3271 \n 9        2022 Davey      Payne          3241 \n10        2022 Andre      Boucaud        3214 \n# ℹ 6,225,601 more rows\n\n\nJames Internicola worked the most overtime hours of 3693."
  },
  {
    "objectID": "mp01.html#which-agency-has-the-highest-average-total-annual-payroll-base-and-overtime-pay-per-employee",
    "href": "mp01.html#which-agency-has-the-highest-average-total-annual-payroll-base-and-overtime-pay-per-employee",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "3.4 Which agency has the highest average total annual payroll (base and overtime pay per employee)?",
    "text": "3.4 Which agency has the highest average total annual payroll (base and overtime pay per employee)?\n\n\nShow the code\ntotal_compensation |&gt; group_by(agency_name) |&gt;\n  summarize(avg_tot_pay=mean(total_compensation)) |&gt;\n  arrange(desc(avg_tot_pay))\n\n\n# A tibble: 169 × 2\n   agency_name                    avg_tot_pay\n   &lt;chr&gt;                                &lt;dbl&gt;\n 1 Office Of Racial Equity            151093.\n 2 Commission On Racial Equity        136191 \n 3 Districting Commission             120641.\n 4 Office Of Criminal Justice         117280.\n 5 Office Of Collective Bargainin     114884.\n 6 Financial Info Svcs Agency         111230.\n 7 Office Of The Actuary              106924.\n 8 Bronx Community Board #3           105814.\n 9 Public Administrator-Richmond      105752.\n10 Municipal Water Fin Authority      101300.\n# ℹ 159 more rows\n\n\nOffice of Racial Equity has the highest average total annual payroll."
  },
  {
    "objectID": "mp01.html#which-agency-has-the-most-employees-on-payroll-in-each-year",
    "href": "mp01.html#which-agency-has-the-most-employees-on-payroll-in-each-year",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "3.5 Which agency has the most employees on payroll in each year?",
    "text": "3.5 Which agency has the most employees on payroll in each year?\n\n\nShow the code\ntotal_compensation |&gt;\n  group_by(fiscal_year, agency_name) |&gt;\n  summarize(num_empl=n(),.groups=\"drop\") |&gt;\n  group_by(fiscal_year) |&gt;\n  slice_max(num_empl,n=1)\n\n\n# A tibble: 11 × 3\n# Groups:   fiscal_year [11]\n   fiscal_year agency_name            num_empl\n         &lt;dbl&gt; &lt;chr&gt;                     &lt;int&gt;\n 1        2014 Dept Of Ed Pedagogical   100589\n 2        2015 Dept Of Ed Pedagogical   111857\n 3        2016 Dept Of Ed Pedagogical   106263\n 4        2017 Dept Of Ed Pedagogical   104629\n 5        2018 Dept Of Ed Pedagogical   107956\n 6        2019 Dept Of Ed Pedagogical   112067\n 7        2020 Dept Of Ed Pedagogical   114999\n 8        2021 Dept Of Ed Pedagogical   113523\n 9        2022 Dept Of Ed Pedagogical   120453\n10        2023 Dept Of Ed Pedagogical   106882\n11        2024 Dept Of Ed Pedagogical   108209\n\n\nDepartment of Ed Pedagogical has the most employees in every year."
  },
  {
    "objectID": "mp01.html#which-agency-has-the-highest-overtime-usage-compared-to-regular-hours",
    "href": "mp01.html#which-agency-has-the-highest-overtime-usage-compared-to-regular-hours",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "3.6 Which agency has the highest overtime usage (compared to regular hours)?",
    "text": "3.6 Which agency has the highest overtime usage (compared to regular hours)?\n\n\nShow the code\ntotal_compensation |&gt;\n  group_by(agency_name) |&gt;\n  summarize(ot_usage=mean(ot_hours)/mean(regular_hours)) |&gt;\n  arrange(desc(ot_usage))\n\n\n# A tibble: 169 × 2\n   agency_name                  ot_usage\n   &lt;chr&gt;                           &lt;dbl&gt;\n 1 Board Of Election              0.200 \n 2 Fire Department                0.190 \n 3 Department Of Correction       0.185 \n 4 Department Of Sanitation       0.138 \n 5 Police Department              0.125 \n 6 Dept Of Citywide Admin Svcs    0.120 \n 7 Department Of Transportation   0.115 \n 8 Dept. Of Homeless Services     0.109 \n 9 Nyc Housing Authority          0.106 \n10 Admin For Children's Svcs      0.0812\n# ℹ 159 more rows\n\n\nBoard of Election has the highest overtime usage."
  },
  {
    "objectID": "mp01.html#what-is-the-average-salary-of-employees-who-work-outside-the-five-boroughs-that-is-whose-work_location_borough-is-not-one-of-the-five-counties.",
    "href": "mp01.html#what-is-the-average-salary-of-employees-who-work-outside-the-five-boroughs-that-is-whose-work_location_borough-is-not-one-of-the-five-counties.",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "3.7 What is the average salary of employees who work outside the five boroughs? (That is, whose work_location_borough is not one of the five counties.)",
    "text": "3.7 What is the average salary of employees who work outside the five boroughs? (That is, whose work_location_borough is not one of the five counties.)\n\n\nShow the code\ntotal_compensation |&gt;\n  filter(!work_location_borough %in% c(\"Manhattan\", \"Brooklyn\", \"Queens\", \n                                     \"Bronx\", \"Richmond\")) |&gt;\n  summarize(avg_salary=mean(total_compensation,na.rm=TRUE))\n\n\n# A tibble: 1 × 1\n  avg_salary\n       &lt;dbl&gt;\n1     55503.\n\n\nThe average salary of employees working outside the New York City is 55503."
  },
  {
    "objectID": "mp01.html#how-much-has-the-citys-aggregate-payroll-grown-over-the-past-10-years",
    "href": "mp01.html#how-much-has-the-citys-aggregate-payroll-grown-over-the-past-10-years",
    "title": "Commission to Analyze Taxpayer Spending (CATS)",
    "section": "3.8 How much has the city’s aggregate payroll grown over the past 10 years?",
    "text": "3.8 How much has the city’s aggregate payroll grown over the past 10 years?\n\n\nShow the code\ngrowth &lt;- total_compensation |&gt;\n  group_by(fiscal_year) |&gt;\n  summarize(agg_pay=mean(total_compensation,na.rm=TRUE))\n\nagg_pay_2024 &lt;- growth |&gt; filter(fiscal_year==\"2024\") |&gt;\n  pull(agg_pay)\n\nagg_pay_2014 &lt;- growth |&gt; filter(fiscal_year==\"2014\") |&gt;\n  pull(agg_pay)\n\ngrowth_amount &lt;- agg_pay_2024 - agg_pay_2014\ngrowth_percentage &lt;- growth_amount/agg_pay_2014*100\ngrowth_amount\n\n\n[1] 13384.23\n\n\nShow the code\ngrowth_percentage\n\n\n[1] 32.2868\n\n\nThe city’s payroll has grown 13384.23 dollars and 32.29% over the past 10 years.\nNow, I will analyze three possible policy changes to see their impact on overall spending. I have two policies suggested and will come up with my own policy proposal for analysis. For each policy, I will i) compute its impact on city payroll, ii) determine any other staffing adjustments required, and iii) make a recommendation to the CATS."
  },
  {
    "objectID": "mp02.html",
    "href": "mp02.html",
    "title": "Environmental Efficiency of US Public Transit Systems",
    "section": "",
    "text": "Green Transit Alliance for Investigation of Variance (GTA IV) gave a series of awards for the greenest public transit angencies. The winners of the various GTA IV awards went to King County Metro, Everett Transit and RiverCities Transit. We will explore US Public Transit systems to assess their environmental efficiency and will use a variety of data sources to i) determine how many riders are served by different transit systems; ii) determine how far each public transit system transports an average rider; and iii) investigate the effective emissions associated with each form of transit."
  },
  {
    "objectID": "mp02.html#conclusion",
    "href": "mp02.html#conclusion",
    "title": "Environmental Efficiency of US Public Transit Systems",
    "section": "6 Conclusion",
    "text": "6 Conclusion\nThis press release announces the winners in each category. The greenest transit for large size agencies is King County Metro, in Seattle, Washington. For medium size agencies, Everett Transit in Everett, Washington is the greenest. The winner for small size agencies goes to RiverCities Transit from Longview, Washington."
  },
  {
    "objectID": "mp02.html#data-import",
    "href": "mp02.html#data-import",
    "title": "Environmental Efficiency of US Public Transit Systems",
    "section": "2 Data Import",
    "text": "2 Data Import\nWe download the EIA State Electricity Profiles, then use it to estimate the environmental impact of the electricity used to run certain transit systems.\n\n\nCode\nensure_package &lt;- function(pkg){\n    pkg &lt;- as.character(substitute(pkg))\n    options(repos = c(CRAN = \"https://cloud.r-project.org\"))\n    if(!require(pkg, character.only=TRUE)) install.packages(pkg)\n    stopifnot(require(pkg, character.only=TRUE))\n}\n\nensure_package(httr2)\nensure_package(rvest)\nensure_package(datasets)\nensure_package(purrr)\nensure_package(DT)\nensure_package(stringr)\nensure_package(dplyr)\n\nget_eia_sep &lt;- function(state, abbr){\n    state_formatted &lt;- str_to_lower(state) |&gt; str_replace_all(\"\\\\s\", \"\")\n    \n    dir_name &lt;- file.path(\"data\", \"mp02\")\n    file_name &lt;- file.path(dir_name, state_formatted)\n    \n    dir.create(dir_name, showWarnings=FALSE, recursive=TRUE)\n    \n    if(!file.exists(file_name)){\n        BASE_URL &lt;- \"https://www.eia.gov\"\n        REQUEST &lt;- request(BASE_URL) |&gt; \n            req_url_path(\"electricity\", \"state\", state_formatted)\n    \n        RESPONSE &lt;- req_perform(REQUEST)\n    \n        resp_check_status(RESPONSE)\n        \n        writeLines(resp_body_string(RESPONSE), file_name)\n    }\n    \n    TABLE &lt;- read_html(file_name) |&gt; \n        html_element(\"table\") |&gt; \n        html_table() |&gt;\n        mutate(Item = str_to_lower(Item))\n    \n    if(\"U.S. rank\" %in% colnames(TABLE)){\n        TABLE &lt;- TABLE |&gt; rename(Rank = `U.S. rank`)\n    }\n    \n    CO2_MWh &lt;- TABLE |&gt; \n        filter(Item == \"carbon dioxide (lbs/mwh)\") |&gt;\n        pull(Value) |&gt; \n        str_replace_all(\",\", \"\") |&gt;\n        as.numeric()\n    \n    PRIMARY &lt;- TABLE |&gt; \n        filter(Item == \"primary energy source\") |&gt; \n        pull(Rank)\n    \n    RATE &lt;- TABLE |&gt;\n        filter(Item == \"average retail price (cents/kwh)\") |&gt;\n        pull(Value) |&gt;\n        as.numeric()\n    \n    GENERATION_MWh &lt;- TABLE |&gt;\n        filter(Item == \"net generation (megawatthours)\") |&gt;\n        pull(Value) |&gt;\n        str_replace_all(\",\", \"\") |&gt;\n        as.numeric()\n    \n    data.frame(CO2_MWh               = CO2_MWh, \n               primary_source        = PRIMARY,\n               electricity_price_MWh = RATE * 10, # / 100 cents to dollars &\n               # * 1000 kWh to MWH \n               generation_MWh        = GENERATION_MWh, \n               state                 = state, \n               abbreviation          = abbr\n    )\n}\n\nEIA_SEP_REPORT &lt;- map2(state.name, state.abb, get_eia_sep) |&gt; list_rbind()\n\n\nWe use the following code to create a table.\n\n\nCode\nensure_package(scales)\n\nEIA_SEP_REPORT |&gt; \n    select(-abbreviation) |&gt;\n    arrange(desc(CO2_MWh)) |&gt;\n    mutate(CO2_MWh = number(CO2_MWh, big.mark=\",\"), \n           electricity_price_MWh = dollar(electricity_price_MWh), \n           generation_MWh = number(generation_MWh, big.mark=\",\")) |&gt;\n    rename(`Pounds of CO2 Emitted per MWh of Electricity Produced`=CO2_MWh, \n           `Primary Source of Electricity Generation`=primary_source, \n           `Average Retail Price for 1000 kWh`=electricity_price_MWh, \n           `Total Generation Capacity (MWh)`= generation_MWh, \n           State=state) |&gt;\n    datatable()"
  },
  {
    "objectID": "mp02.html#initial-analysis-of-sep-data",
    "href": "mp02.html#initial-analysis-of-sep-data",
    "title": "Environmental Efficiency of US Public Transit Systems",
    "section": "3 Initial Analysis of SEP Data",
    "text": "3 Initial Analysis of SEP Data\nHere are some quick facts gained using the EIA_SEP_REPORT data.\n\nHawaii has the most expensive retail electricity with a price of $386 per MWh.\n\n\n\nCode\n# Which state has the most expensive retail electricity?\nstate_highest_price &lt;- EIA_SEP_REPORT |&gt;\n  select(electricity_price_MWh, state) |&gt;\n  slice_max(electricity_price_MWh, n=1)\n\n\n\nWest Virginia, whose primary source of electricity generation is coal, has the ‘dirtiest’ electricity mix with 1925 pounds of CO2 emitted per MWh.\n\n\n\nCode\n# Which state has the 'dirtiest' electricity mix?\nstate_dirtiest_electricity &lt;- EIA_SEP_REPORT |&gt;\n  select(CO2_MWh, primary_source, state) |&gt;\n  slice_max(CO2_MWh, n=1)\n\n\n\nOn average, 805.37 pounds of CO2 are emitted per MWh of electricity produced in the US.\n\n\n\nCode\n# On average, how many pounds of CO2 are emitted per MWh of electricity produced in the US? (Note that you will need to use a suitably weighted average here.)\naverage_co2_emitted &lt;- EIA_SEP_REPORT |&gt;\n  summarize(\n    average_co2 = sum(CO2_MWh * generation_MWh) / sum(generation_MWh)\n  )\n\n\n\nPetroleum is the rarest primary energy source in the US used only in one state. The associated cost of electricity is $386 per MWh and it is used in Hawaii.\n\n\n\nCode\n# What is the rarest primary energy source in the US? \nrarest_source &lt;- EIA_SEP_REPORT |&gt;\n  group_by(primary_source) |&gt;\n  summarize(num_state_source = n()) |&gt;\n  slice_min(num_state_source, n = 1)\n\n# What is the associated cost of electricity and where is it used?\nrarest_source_table &lt;- EIA_SEP_REPORT |&gt;\n  select(primary_source, electricity_price_MWh, state) |&gt;\n  filter(primary_source == \"Petroleum\")\n\n\n\nNY’s energy mix is 1.64 times cleaner than that of Texas.\n\n\n\nCode\n# How many times cleaner is NY’s energy mix than that of Texas?\nco2_emitted_NY &lt;- EIA_SEP_REPORT |&gt;\n  filter(state == \"New York\") |&gt;\n  summarize(CO2_MWh)\n\nco2_emitted_Texas &lt;- EIA_SEP_REPORT |&gt;\n  filter(state == \"Texas\") |&gt;\n  summarize(CO2_MWh)\n\ntimes_cleaner &lt;- co2_emitted_Texas / co2_emitted_NY\n\n\nWe now download the 2023 Annual Database Energy Consumption report and do some clean up. After that, we recode the Mode column.\n\n\nCode\n# import the data: 2023 Annual Database Energy Consumption\nensure_package(readxl)\n# Create 'data/mp02' directory if not already present\nDATA_DIR &lt;- file.path(\"data\", \"mp02\")\ndir.create(DATA_DIR, showWarnings=FALSE, recursive=TRUE)\n\nNTD_ENERGY_FILE &lt;- file.path(DATA_DIR, \"2023_ntd_energy.xlsx\")\n\nif(!file.exists(NTD_ENERGY_FILE)){\n    DS &lt;- download.file(\"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-10/2023%20Energy%20Consumption.xlsx\", \n                  destfile=NTD_ENERGY_FILE, \n                  method=\"curl\")\n    \n    if(DS | (file.info(NTD_ENERGY_FILE)$size == 0)){\n        cat(\"I was unable to download the NTD Energy File. Please try again.\\n\")\n        stop(\"Download failed\")\n    }\n}\n\nNTD_ENERGY_RAW &lt;- read_xlsx(NTD_ENERGY_FILE)\n\n\n\n\nCode\n# do some basic clean-up\nensure_package(tidyr)\nto_numeric_fill_0 &lt;- function(x){\n    replace_na(as.numeric(x), 0)\n}\n\nNTD_ENERGY &lt;- NTD_ENERGY_RAW |&gt; \n    select(-c(`Reporter Type`, \n              `Reporting Module`, \n              `Other Fuel`, \n              `Other Fuel Description`)) |&gt;\n    mutate(across(-c(`Agency Name`, \n                     `Mode`,\n                     `TOS`), \n                  to_numeric_fill_0)) |&gt;\n    group_by(`NTD ID`, `Mode`, `Agency Name`) |&gt;\n    summarize(across(where(is.numeric), sum), \n              .groups = \"keep\") |&gt;\n    mutate(ENERGY = sum(c_across(c(where(is.numeric))))) |&gt;\n    filter(ENERGY &gt; 0) |&gt;\n    select(-ENERGY) |&gt;\n    ungroup()\n\n\n\n\nCode\n# clean up mode column in ntd energy\nNTD_ENERGY &lt;- NTD_ENERGY |&gt;\n    mutate(Mode=case_when(\n        Mode == \"HR\" ~ \"Heavy Rail\",\n        Mode == \"AR\" ~ \"Alaska Railroad\",\n        Mode == \"CB\" ~ \"Commuter Bus\",\n        Mode == \"CC\" ~ \"Cable Car\",\n        Mode == \"CR\" ~ \"Commuter Rail\",\n        Mode == \"DR\" ~ \"Demand Response\",\n        Mode == \"FB\" ~ \"Ferryboat\",\n        Mode == \"IP\" ~ \"Inclined Plane\",\n        Mode == \"LR\" ~ \"Light Rail\",\n        Mode == \"MB\" ~ \"Bus\",\n        Mode == \"MG\" ~ \"Monorail and Automated Guideway modes\",\n        Mode == \"PB\" ~ \"Publico\",\n        Mode == \"RB\" ~ \"Bus Rapid Transit\",\n        Mode == \"SR\" ~ \"Streetcar Rail\",\n        Mode == \"TB\" ~ \"Trolleybus\",\n        Mode == \"TR\" ~ \"Aerial Tramways\",\n        Mode == \"VP\" ~ \"Vanpool\",\n        Mode == \"YR\" ~ \"Hybrid Rail\",\n        TRUE ~ \"Unknown\"))\n\n\nNext, we download the 2023 Service by Agency report, from which we will extract characteristics of typical passenger trips on each transit service. We will also explore the data by answering some questions using the service data.\n\n\nCode\n# download the 2023 service by agency report\nlibrary(readr)\nNTD_SERVICE_FILE &lt;- file.path(DATA_DIR, \"2023_service.csv\")\nif(!file.exists(NTD_SERVICE_FILE)){\n    DS &lt;- download.file(\"https://data.transportation.gov/resource/6y83-7vuw.csv\", \n                  destfile=NTD_SERVICE_FILE, \n                  method=\"curl\")\n    \n    if(DS | (file.info(NTD_SERVICE_FILE)$size == 0)){\n        cat(\"I was unable to download the NTD Service File. Please try again.\\n\")\n        stop(\"Download failed\")\n    }\n}\n\nNTD_SERVICE_RAW &lt;- read_csv(NTD_SERVICE_FILE)\n\n\n\n\nCode\n#clean up the service data\nNTD_SERVICE &lt;- NTD_SERVICE_RAW |&gt;\n    mutate(`NTD ID` = as.numeric(`_5_digit_ntd_id`)) |&gt; \n    rename(Agency = agency, \n           City   = max_city, \n           State  = max_state,\n           UPT    = sum_unlinked_passenger_trips_upt, \n           MILES  = sum_passenger_miles) |&gt;\n    select(matches(\"^[A-Z]\", ignore.case=FALSE)) |&gt;\n    filter(MILES &gt; 0)"
  },
  {
    "objectID": "mp02.html#recoding-the-mode-column",
    "href": "mp02.html#recoding-the-mode-column",
    "title": "Environmental Efficiency of US Public Transit Systems",
    "section": "4 Recoding the mode column",
    "text": "4 Recoding the mode column\n\n\nCode\n# clean up mode column in ntd energy\nNTD_ENERGY &lt;- NTD_ENERGY |&gt;\n    mutate(Mode=case_when(\n        Mode == \"HR\" ~ \"Heavy Rail\",\n        Mode == \"AR\" ~ \"Alaska Railroad\",\n        Mode == \"CB\" ~ \"Commuter Bus\",\n        Mode == \"CC\" ~ \"Cable Car\",\n        Mode == \"CR\" ~ \"Commuter Rail\",\n        Mode == \"DR\" ~ \"Demand Response\",\n        Mode == \"FB\" ~ \"Ferryboat\",\n        Mode == \"IP\" ~ \"Inclined Plane\",\n        Mode == \"LR\" ~ \"Light Rail\",\n        Mode == \"MB\" ~ \"Bus\",\n        Mode == \"MG\" ~ \"Monorail and Automated Guideway modes\",\n        Mode == \"PB\" ~ \"Publico\",\n        Mode == \"RB\" ~ \"Bus Rapid Transit\",\n        Mode == \"SR\" ~ \"Streetcar Rail\",\n        Mode == \"TB\" ~ \"Trolleybus\",\n        Mode == \"TR\" ~ \"Aerial Tramways\",\n        Mode == \"VP\" ~ \"Vanpool\",\n        Mode == \"YR\" ~ \"Hybrid Rail\",\n        TRUE ~ \"Unknown\"))\n\n\n\n\nCode\n# download the 2023 service by agency report\nlibrary(readr)\nNTD_SERVICE_FILE &lt;- file.path(DATA_DIR, \"2023_service.csv\")\nif(!file.exists(NTD_SERVICE_FILE)){\n    DS &lt;- download.file(\"https://data.transportation.gov/resource/6y83-7vuw.csv\", \n                  destfile=NTD_SERVICE_FILE, \n                  method=\"curl\")\n    \n    if(DS | (file.info(NTD_SERVICE_FILE)$size == 0)){\n        cat(\"I was unable to download the NTD Service File. Please try again.\\n\")\n        stop(\"Download failed\")\n    }\n}\n\nNTD_SERVICE_RAW &lt;- read_csv(NTD_SERVICE_FILE)\n\n\n\n\nCode\n#clean up the service data\nNTD_SERVICE &lt;- NTD_SERVICE_RAW |&gt;\n    mutate(`NTD ID` = as.numeric(`_5_digit_ntd_id`)) |&gt; \n    rename(Agency = agency, \n           City   = max_city, \n           State  = max_state,\n           UPT    = sum_unlinked_passenger_trips_upt, \n           MILES  = sum_passenger_miles) |&gt;\n    select(matches(\"^[A-Z]\", ignore.case=FALSE)) |&gt;\n    filter(MILES &gt; 0)"
  },
  {
    "objectID": "mp02.html#explore-ntd-service-data",
    "href": "mp02.html#explore-ntd-service-data",
    "title": "Environmental Efficiency of US Public Transit Systems",
    "section": "4 Explore NTD Service Data",
    "text": "4 Explore NTD Service Data\n\n\nCode\n# Which transit service has the most UPT annually?\nlibrary(knitr)\n\nmost_upt &lt;- NTD_SERVICE |&gt;\n  mutate(UPT = comma(UPT)) |&gt;\n  slice_max(UPT, n = 1)\n\nkable(most_upt, caption = \"Transit Service with the Most UPT Annually\")\n\n\n\nTransit Service with the Most UPT Annually\n\n\n\n\n\n\n\n\n\n\nAgency\nCity\nState\nUPT\nMILES\nNTD ID\n\n\n\n\nRockford Mass Transit District\nRockford\nIL\n994,754\n5035893\n50058\n\n\n\n\n\n\n\nCode\n# What is the average trip length of a trip on MTA NYC?\nmta_avg_trip &lt;- NTD_SERVICE |&gt;\n  filter(Agency == \"MTA New York City Transit\") |&gt;\n  mutate(`MTA Average Trip Length` = MILES / UPT) |&gt;\n  select(`NTD ID`, Agency, City, State, `MTA Average Trip Length`)\n\nkable(mta_avg_trip, caption = \"Average Trip Length on MTA NYC\")\n\n\n\nAverage Trip Length on MTA NYC\n\n\n\n\n\n\n\n\n\nNTD ID\nAgency\nCity\nState\nMTA Average Trip Length\n\n\n\n\n20008\nMTA New York City Transit\nBrooklyn\nNY\n3.644089\n\n\n\n\n\n\n\nCode\n# Which transit service in NYC has the longest average trip length?\nnyc_longest_trip &lt;- NTD_SERVICE |&gt;\n  filter(State == \"NY\", City == \"New York\" | City == \"Brooklyn\") |&gt;\n  mutate(`Average Trip Length` = MILES / UPT) |&gt;\n  slice_max(`Average Trip Length`, n = 1)\n\nkable(nyc_longest_trip, caption = \"Transit Service in NYC with the Longest Average Trip Length\")\n\n\n\nTransit Service in NYC with the Longest Average Trip Length\n\n\n\n\n\n\n\n\n\n\n\nAgency\nCity\nState\nUPT\nMILES\nNTD ID\nAverage Trip Length\n\n\n\n\nMTA Long Island Rail Road\nNew York\nNY\n83835706\n2033685836\n20100\n24.25799\n\n\n\n\n\n\n\nCode\n# Which state has the fewest total miles travelled by public transit?\nstate_fewest_miles &lt;- NTD_SERVICE |&gt;\n  group_by(State) |&gt;\n  summarize(`Total Miles` = comma(sum(MILES, na.rm = TRUE))) |&gt;\n  slice_min(`Total Miles`, n = 1)\n\nkable(state_fewest_miles, caption = \"State with the Fewest Total Miles Travelled by Public Transit\")\n\n\n\nState with the Fewest Total Miles Travelled by Public Transit\n\n\nState\nTotal Miles\n\n\n\n\nWA\n1,059,910,614\n\n\n\n\n\n\n\nCode\n# Are all states represented in this data? If no, which ones are missing? The state.name and state.abb objects we used above may be useful here.\nstates_missing &lt;- EIA_SEP_REPORT |&gt;\n  anti_join(NTD_SERVICE, join_by(\"abbreviation\" == \"State\")) |&gt;\n  rename(`Missing States` = state) |&gt;\n  select(`Missing States`)\n\nkable(states_missing, caption = \"Missing States\")\n\n\n\nMissing States\n\n\nMissing States\n\n\n\n\nArizona\n\n\nArkansas\n\n\nCalifornia\n\n\nColorado\n\n\nHawaii\n\n\nIowa\n\n\nKansas\n\n\nLouisiana\n\n\nMissouri\n\n\nMontana\n\n\nNebraska\n\n\nNevada\n\n\nNew Mexico\n\n\nNorth Dakota\n\n\nOklahoma\n\n\nSouth Dakota\n\n\nTexas\n\n\nUtah\n\n\nWyoming"
  },
  {
    "objectID": "mp02.html#analysis",
    "href": "mp02.html#analysis",
    "title": "Environmental Efficiency of US Public Transit Systems",
    "section": "5 Analysis",
    "text": "5 Analysis\nWe’re now ready to start putting these datasets together and using them to identify America’s greenest transit agencies.\n\n\nCode\n# Task 5: join the three tables\nagency_mode_pair &lt;- NTD_SERVICE |&gt;\n  inner_join(NTD_ENERGY |&gt;\n      select(-c(`Kerosene`, `Bunker Fuel`, `Ethanol`, `Methonal`)), #clean it up \n    join_by(\"NTD ID\" == \"NTD ID\")\n    ) |&gt; \n  inner_join(EIA_SEP_REPORT,\n    join_by(State == \"abbreviation\")\n    ) |&gt;\n  select(-c(`Agency Name`, State)) |&gt;\n  rename(\n    agency = `Agency`,\n    city = `City`,\n    mode = `Mode`,\n    upt = `UPT`,\n    miles = `MILES`,\n    ntd_id = `NTD ID`,\n    biodiesel = `Bio-Diesel`,\n    cnaturalgas = `C Natural Gas`,\n    diesel = `Diesel Fuel`,\n    gasoline = `Gasoline`,\n    liqnatgas = `Liquified Nat Gas`,\n    liqpetgas =`Liquified Petroleum Gas`,\n    electric_battery = `Electric Battery`,\n    electric_propulsion = `Electric Propulsion`,\n    co2_mwh = CO2_MWh\n    ) |&gt;\n  mutate(\n    electricbattery_emission = electric_battery * (co2_mwh / 1000),\n    electricprop_emission = electric_propulsion * (co2_mwh / 1000),\n    total_emission = (\n        electricbattery_emission +\n        electricprop_emission\n      )\n  ) |&gt;\n  group_by(ntd_id) |&gt;\n  mutate(agency_total_emission = sum(total_emission)) |&gt;\n  ungroup()\n\n# Task 6\n# use percentiles to define small, medium, and large agencies. \npercentile_1 &lt;- quantile(agency_mode_pair |&gt; select(upt) |&gt; unique() |&gt; pull(upt), 0.3)\npercentile_2 &lt;- quantile(agency_mode_pair |&gt; select(upt) |&gt; unique() |&gt; pull(upt), 0.7)\n\n# updating agency_mode_pair with agency size\n# adding green level\nagency_mode_pair &lt;-\n  agency_mode_pair |&gt;\n  group_by(ntd_id) |&gt;\n  mutate(\n    agency_emission_per_capita = sum(total_emission) / upt,\n    emission_per_transit = sum(total_emission) / miles,\n    green_level = agency_emission_per_capita * emission_per_transit,\n    size = case_when(\n      upt &lt; percentile_1 ~ \"Small\",\n      upt &gt;= percentile_1 & upt &lt;= percentile_2 ~ \"Medium\",\n      upt &gt; percentile_2 ~ \"Large\",\n    )\n    ) |&gt;\n  ungroup()\n\n\nBesed on our analysis, the Greenest Transit Agency award goes to King County Metro for large size, it goes to Everett Transist for medium size, and it goes to RiverCities Transit for small size.\n\n\nCode\n# grouping th data\ngreen_levels &lt;-\n  agency_mode_pair |&gt;\n  group_by(size, ntd_id) |&gt;\n  summarize(\n    agency = first(agency),\n    city = first(city),\n    state = first(state),\n    green_level = first(green_level),\n    .groups = 'drop'\n  ) |&gt;\n  ungroup()\n\n# Select the greenest agency in each size\ngreenest_agency &lt;-\n  green_levels |&gt;\n  group_by(size) |&gt;\n  slice(1) |&gt;\n  select(agency, city, state)\n\n# Compute median green\nmedian_green &lt;- green_levels |&gt;\n  group_by(size) |&gt;\n  summarise(median_green = median(green_level, na.rm = TRUE))\n\n# visualize greenest agenciies\ngreenest_agency |&gt;\n  left_join(median_green, join_by(\"size\" == \"size\")) |&gt;\n  select(agency, city, state) |&gt;\n  kable(caption = \"Greenest Transit Agency\")\n\n\n\nGreenest Transit Agency\n\n\n\n\n\n\n\n\nsize\nagency\ncity\nstate\n\n\n\n\nLarge\nKing County, dba: King County Metro\nSeattle\nWashington\n\n\nMedium\nCity of Everett, dba: Everett Transit\nEverett\nWashington\n\n\nSmall\nCity of Longview, dba: RiverCities Transit\nLongview\nWashington"
  },
  {
    "objectID": "mp02.html#introduction",
    "href": "mp02.html#introduction",
    "title": "Environmental Efficiency of US Public Transit Systems",
    "section": "",
    "text": "Green Transit Alliance for Investigation of Variance (GTA IV) gave a series of awards for the greenest public transit angencies. The winners of the various GTA IV awards went to King County Metro, Everett Transit and RiverCities Transit. We will explore US Public Transit systems to assess their environmental efficiency and will use a variety of data sources to i) determine how many riders are served by different transit systems; ii) determine how far each public transit system transports an average rider; and iii) investigate the effective emissions associated with each form of transit."
  }
]